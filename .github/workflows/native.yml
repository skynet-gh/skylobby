# https://gist.github.com/linux-china/8745394fbc308168b20068386771ea1b

name: GraalVM Native Image Build

on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: ilammy/msvc-dev-cmd@v1.12.1
      - uses: microsoft/setup-msbuild@v1.3
        with:
          vs-version: '16.11.23'
          msbuild-architecture: x64
      # https://github.com/clojure-lsp/clojure-lsp/blob/419f58c/.github/workflows/release.yml#L300-L304
      - uses: al-cheb/configure-pagefile-action@v1.3
        with:
          minimum-size: 8GB
          maximum-size: 16GB
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21.0.1
          distribution: 'graalvm'
      - uses: actions/cache@v3.3.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: git config --system core.longpaths true
      - uses: actions/setup-node@v4.0.1
        with:
          node-version: '21'
          cache: 'npm'
      - run: npm install
      - run: clojure -M:cljs compile frontend
        shell: powershell
      - run: clojure -M:graal-deps:native-windows
        shell: powershell
      # https://github.com/oracle/graal/issues/2256#issuecomment-624024965
      - run: editbin /SUBSYSTEM:CONSOLE skylobby.exe
        shell: powershell
      - run: compress-archive -path ".\*.dll","skylobby.exe" "skylobby-windows.zip" -compressionlevel optimal
        shell: powershell
      - uses: actions/upload-artifact@v4.0.0
        with:
          name: skylobby-windows.zip
          path: skylobby-windows.zip
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./skylobby-windows.zip
          asset_name: native-skylobby-windows.zip
          asset_content_type: application/zip
  mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21.0.1
          distribution: 'graalvm'
      - uses: actions/cache@v3.3.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v4.0.1
        with:
          node-version: '21'
          cache: 'npm'
      - run: npm install
      - run: clojure -M:cljs compile frontend
      - run: clojure -M:graal-deps:native-mac
      - uses: actions/upload-artifact@v4.0.0
        with:
          name: skylobby-mac
          path: skylobby
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21.0.1
          distribution: 'graalvm'
      - uses: actions/cache@v3.3.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v4.0.1
        with:
          node-version: '21'
          cache: 'npm'
      - run: npm install
      - run: clojure -M:cljs compile frontend
      - run: clojure -M:graal-deps:native-linux
      - uses: actions/upload-artifact@v4.0.0
        with:
          name: skylobby-linux
          path: skylobby
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./skylobby
          asset_name: native-skylobby-linux
          asset_content_type: application/octet-stream
